{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","url","isValid","useState","Math","random","toFixed","slice","id","touched","setTouched","validUrl","setValidUrl","hasError","hasErrorInvalid","urlPattern","htmlFor","type","classNames","event","test","target","onBlur","NewMovie","onAdd","count","setCount","setMovie","emptyInputs","setIsValid","valid","handleChange","prevMovie","onSubmit","prevCount","disabled","App","moviesFromServer","movieList","setMovieList","newMovie","prevList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f485210b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  url?: boolean,\n  isValid: (valid: boolean) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  url = false,\n  isValid,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const [validUrl, setValidUrl] = useState(true);\n  const hasError = touched && required && !value;\n  const hasErrorInvalid = touched && !validUrl;\n  // eslint-disable-next-line max-len\n  const urlPattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => {\n            if (url) {\n              setValidUrl(urlPattern.test(event.target.value));\n              isValid(validUrl);\n            }\n\n            onChange(event.target.value);\n          }}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasErrorInvalid && (\n        <p className=\"help is-danger\">{`${label} is not a valid URL`}</p>\n      )}\n    </div>\n  );\n};\n","import { FC, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nexport const NewMovie: FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [validUrl, setValidUrl] = useState(false);\n  const [movie, setMovie] = useState<Movie>({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const {\n    title, description, imdbUrl, imgUrl, imdbId,\n  } = movie;\n  const emptyInputs = !title || !imgUrl || !imdbUrl || !imdbId;\n\n  const resetForm = () => {\n    setMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  const setIsValid = (valid: boolean) => {\n    setValidUrl(valid);\n  };\n\n  const handleChange = (label: string) => (value: string) => {\n    setMovie((prevMovie) => {\n      return {\n        ...prevMovie,\n        [label]: value,\n      };\n    });\n  };\n\n  const handleSubmit = () => {\n    onAdd(movie);\n    setCount(prevCount => prevCount + 1);\n    resetForm();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={handleChange('title')}\n        required\n        isValid={setIsValid}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={handleChange('description')}\n        isValid={setIsValid}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={handleChange('imgUrl')}\n        required\n        url\n        isValid={setIsValid}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={handleChange('imdbUrl')}\n        required\n        url\n        isValid={setIsValid}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={handleChange('imdbId')}\n        required\n        isValid={setIsValid}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={emptyInputs || !validUrl}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movieList, setMovieList] = useState(moviesFromServer);\n\n  const onMovieSubmit = (newMovie: Movie) => {\n    setMovieList(prevList => {\n      return [...prevList, newMovie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movieList} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onMovieSubmit} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}